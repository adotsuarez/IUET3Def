/*
! tailwindcss v3.0.9 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Exo, sans-serif;
  /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
Ensure the default browser behavior of the `hidden` attribute.
*/

[hidden] {
  display: none;
}

:root {
  background-color: hsla(var(--b1) / var(--tw-bg-opacity,1));
  color: hsla(var(--bc) / var(--tw-text-opacity,1));
}

html {
  -webkit-tap-highlight-color: transparent;
}

:root {
  --p: 337 92.7% 51.4%;
  --pf: 337 93% 44.7%;
  --pc: 214 53.8% 97.5%;
  --s: 269 64.1% 48%;
  --sf: 269 63.7% 42.2%;
  --sc: 214 53.8% 97.5%;
  --a: 174 60% 51%;
  --af: 174 60% 38.2%;
  --ac: 214 53.8% 97.5%;
  --n: 214 53.8% 97.5%;
  --nf: 214 12.3% 88.8%;
  --nc: 60 14.8% 12%;
  --b1: 60 14.8% 12%;
  --b2: 60 14.5% 22.9%;
  --b3: 60 14.9% 34.1%;
  --bc: 214 53.8% 97.5%;
  --in: 199 100% 55.9%;
  --su: 131 67% 59.6%;
  --wa: 41 100% 56.1%;
  --er: 0 91.2% 51.2%;
}

*, ::before, ::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
}

.avatar.placeholder>div {
  display: flex;
  align-items: center;
  justify-content: center;
}

.btn {
  border-color: transparent;
  border-color: hsla(var(--n) / var(--tw-border-opacity, 1));
  cursor: pointer;
  display: inline-flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  text-align: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
  border-radius: var(--rounded-btn, .5rem);
  height: 3rem;
  font-size: .875rem;
  line-height: 1.25rem;
  line-height: 1em;
  padding-left: 1rem;
  padding-right: 1rem;
  min-height: 3rem;
  font-weight: 600;
  text-transform: uppercase;
  text-transform: var(--btn-text-case, uppercase);
  border-width: var(--border-btn, 1px);
  -webkit-animation: button-pop var(--animation-btn, .25s) ease-out;
  animation: button-pop var(--animation-btn, .25s) ease-out;
  --tw-bg-opacity: 1;
  background-color: hsla(var(--n) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 1;
  --tw-text-opacity: 1;
  color: hsla(var(--nc) / var(--tw-text-opacity, 1));
}

.btn:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.btn-disabled,.btn[disabled] {
  pointer-events: none;
  --tw-bg-opacity: 0.2;
  background-color: hsla(var(--n) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 0;
  --tw-text-opacity: 0.2;
  color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}

.btn.loading,.btn.loading:hover {
  pointer-events: none;
}

.btn.loading:before {
  border-radius: 9999px;
  border-width: 2px;
  height: 1rem;
  margin-right: .5rem;
  width: 1rem;
  -webkit-animation: spin 2s linear infinite;
  animation: spin 2s linear infinite;
  content: "";
  border-color: transparent currentColor currentColor transparent;
}

@media (prefers-reduced-motion:reduce) {
  .btn.loading:before {
    -webkit-animation: spin 10s linear infinite;
    animation: spin 10s linear infinite;
  }
}

@-webkit-keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(1turn);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(1turn);
  }
}

.btn-group>input[type=radio].btn {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.btn-group>input[type=radio].btn:before {
  content: attr(data-title);
}

.card {
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  border-radius: var(--rounded-box, 1rem);
}

.card:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.card figure,.card figure>* {
  width: 100%;
}

.card.image-full {
  display: grid;
}

.card.image-full:before {
  position: relative;
  content: "";
  --tw-bg-opacity: 1;
  background-color: hsla(var(--n) / var(--tw-bg-opacity, 1));
  opacity: .75;
  z-index: 10;
  border-radius: var(--rounded-box, 1rem);
}

.card.image-full:before,.card.image-full>* {
  grid-column-start: 1;
  grid-row-start: 1;
}

.card.image-full>figure img {
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}

.card.image-full>.card-body {
  position: relative;
  --tw-text-opacity: 1;
  color: hsla(var(--nc) / var(--tw-text-opacity, 1));
  z-index: 20;
}

.checkbox:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.dropdown {
  display: inline-block;
  position: relative;
}

.dropdown>:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.dropdown .dropdown-content {
  opacity: 0;
  position: absolute;
  visibility: hidden;
  z-index: 50;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform-origin: top;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

.dropdown-end .dropdown-content {
  right: 0;
}

.dropdown-left .dropdown-content {
  top: 0;
  bottom: auto;
  right: 100%;
  transform-origin: right;
}

.dropdown-right .dropdown-content {
  top: 0;
  bottom: auto;
  left: 100%;
  transform-origin: left;
}

.dropdown-top .dropdown-content {
  top: auto;
  bottom: 100%;
  transform-origin: bottom;
}

.dropdown-end.dropdown-right .dropdown-content {
  bottom: 0;
  top: auto;
}

.dropdown-end.dropdown-left .dropdown-content {
  bottom: 0;
  top: auto;
}

.dropdown.dropdown-hover:hover .dropdown-content,.dropdown.dropdown-open .dropdown-content,.dropdown:not(.dropdown-hover):focus-within .dropdown-content,.dropdown:not(.dropdown-hover):focus .dropdown-content {
  opacity: 1;
  visibility: visible;
}

.form-control {
  display: flex;
  flex-direction: column;
}

.label {
  display: flex;
  align-items: center;
  justify-content: space-between;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  padding: .5rem .25rem;
}

.input {
  flex-shrink: 1;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
  height: 3rem;
  font-size: .875rem;
  line-height: 1.25rem;
  line-height: 2;
  padding-left: 1rem;
  padding-right: 1rem;
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 0;
  border-color: hsla(var(--bc) / var(--tw-border-opacity, 1));
  border-width: 1px;
  border-radius: var(--rounded-btn, .5rem);
}

.input:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  box-shadow: 0 0 0 2px hsl(var(--b1)), 0 0 0 4px hsla(var(--bc) / .2);
}

.input-group>*,.input-group>.input {
  border-radius: 0;
}

.link {
  cursor: pointer;
  text-decoration: underline;
}

.menu {
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.menu.horizontal {
  display: inline-flex;
  flex-direction: row;
}

.menu.horizontal :where(li) {
  flex-direction: row;
}

.menu :where(li) {
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

.menu :where(li)>a,.menu :where(li)>span {
  display: flex;
  align-items: center;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

.menu :where(li)>a {
  cursor: pointer;
}

.menu :where(li)>a:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.menu :where(li).disabled>a,.menu :where(li).disabled>span {
  cursor: auto;
}

.modal {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  opacity: 0;
  pointer-events: none;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  visibility: hidden;
  z-index: 999;
  --tw-bg-opacity: 0.4;
  background-color: hsla(var(--nf) / var(--tw-bg-opacity, 1));
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

@media (min-width:640px) {
  .modal {
    align-items: center;
  }

  .modal-box {
    max-width: 32rem;
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    --tw-translate-y: 0px;
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: var(--rounded-box, 1rem);
  }
}

.modal-open,.modal-toggle:checked+.modal,.modal:target {
  opacity: 1;
  pointer-events: auto;
  visibility: visible;
}

.modal-action {
  display: flex;
  justify-content: flex-end;
  margin-top: 1.5rem;
}

.navbar {
  display: flex;
  align-items: center;
  padding: var(--navbar-padding, .5rem);
  min-height: 4rem;
}

.navbar>* {
  display: flex;
  align-items: center;
}

.navbar-start {
  width: 50%;
  justify-content: flex-start;
}

.navbar-center {
  flex-shrink: 0;
}

.navbar-end {
  width: 50%;
  justify-content: flex-end;
}

.select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  display: inline-flex;
  flex-shrink: 0;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 3rem;
  font-size: .875rem;
  line-height: 1.25rem;
  line-height: 2;
  padding-left: 1rem;
  padding-right: 2.5rem;
  min-height: 3rem;
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 0;
  border-color: hsla(var(--bc) / var(--tw-border-opacity, 1));
  border-width: 1px;
  font-weight: 600;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
  border-radius: var(--rounded-btn, .5rem);
  background-image: linear-gradient(45deg, transparent 50%, currentColor 0),
    linear-gradient(135deg, currentColor 50%, transparent 0);
  background-position: calc(100% - 20px) calc(1px + 50%),
    calc(100% - 16px) calc(1px + 50%);
  background-size: 4px 4px,
    4px 4px;
  background-repeat: no-repeat;
}

.select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  box-shadow: 0 0 0 2px hsl(var(--b1)), 0 0 0 4px hsla(var(--bc) / .2);
}

.select-disabled,.select[disabled] {
  pointer-events: none;
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b2) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--b2) / var(--tw-border-opacity, 1));
  cursor: not-allowed;
  --tw-text-opacity: 0.2;
}

.tab {
  cursor: pointer;
  display: inline-flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  position: relative;
  text-align: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 2rem;
  font-size: .875rem;
  line-height: 1.25rem;
  line-height: 2;
  --tab-padding: 1rem;
  --tw-text-opacity: 0.5;
  color: hsla(var(--bc) / var(--tw-text-opacity, 1));
  padding-left: var(--tab-padding, 1rem);
  padding-right: var(--tab-padding, 1rem);
}

.table {
  position: relative;
  text-align: left;
}

.table th:first-child {
  position: sticky;
  position: -webkit-sticky;
  left: 0;
  z-index: 10;
}

.toggle:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.btn .badge {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1));
  border-color: transparent;
  --tw-text-opacity: 1;
  color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}

.btn .badge-outline {
  background-color: transparent;
  --tw-border-opacity: 1;
  border-color: hsla(var(--b2) / var(--tw-border-opacity, 1));
  --tw-text-opacity: 1;
  color: hsla(var(--b2) / var(--tw-text-opacity, 1));
}

.btn-outline.btn-primary .badge {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--p) / var(--tw-border-opacity, 1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc) / var(--tw-text-opacity, 1));
}

.btn-outline.btn-primary .badge-outline {
  background-color: transparent;
  --tw-border-opacity: 1;
  border-color: hsla(var(--p) / var(--tw-border-opacity, 1));
  --tw-text-opacity: 1;
  color: hsla(var(--p) / var(--tw-text-opacity, 1));
}

.btn-outline.btn-primary:hover .badge {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--pc) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--pc) / var(--tw-border-opacity, 1));
  --tw-text-opacity: 1;
  color: hsla(var(--p) / var(--tw-text-opacity, 1));
}

.btn-outline.btn-primary:hover .badge.outline {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--pf) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--pc) / var(--tw-border-opacity, 1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc) / var(--tw-text-opacity, 1));
}

.btn:active:focus,.btn:active:hover {
  -webkit-animation: none;
  animation: none;
  transform: scale( var(--btn-focus-scale, .95) );
}

.btn-active,.btn:hover {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--nf) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--nf) / var(--tw-border-opacity, 1));
}

.btn:focus-visible {
  box-shadow: 0 0 0 2px hsl(var(--b1)), 0 0 0 4px hsl(var(--nf));
}

.btn-primary {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--p) / var(--tw-border-opacity, 1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc) / var(--tw-text-opacity, 1));
}

.btn-primary.btn-active,.btn-primary:hover {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--pf) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--pf) / var(--tw-border-opacity, 1));
}

.btn-primary:focus-visible {
  box-shadow: 0 0 0 2px hsl(var(--b1)), 0 0 0 4px hsl(var(--p));
}

.btn.glass.btn-active,.btn.glass:hover {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}

.btn.glass:focus-visible {
  box-shadow: 0 0 0 2px currentColor;
}

.btn-ghost {
  background-color: transparent;
  border-color: transparent;
  border-width: 1px;
  color: currentColor;
}

.btn-ghost.btn-active,.btn-ghost:hover {
  --tw-bg-opacity: 0.2;
  background-color: hsla(var(--bc) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 0;
}

.btn-ghost:focus-visible {
  box-shadow: 0 0 0 2px currentColor;
}

.btn-link {
  background-color: transparent;
  border-color: transparent;
  --tw-text-opacity: 1;
  color: hsla(var(--p) / var(--tw-text-opacity, 1));
}

.btn-link.btn-active,.btn-link:hover {
  background-color: transparent;
  border-color: transparent;
  text-decoration: underline;
}

.btn-link:focus-visible {
  box-shadow: 0 0 0 2px currentColor;
}

.btn-outline.btn-primary {
  --tw-text-opacity: 1;
  color: hsla(var(--p) / var(--tw-text-opacity, 1));
}

.btn-outline.btn-primary:hover {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--pf) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--pf) / var(--tw-border-opacity, 1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc) / var(--tw-text-opacity, 1));
}

.btn.loading.btn-circle:before,.btn.loading.btn-square:before {
  margin-right: 0;
}

.btn.loading.btn-lg:before,.btn.loading.btn-xl:before {
  height: 1.25rem;
  width: 1.25rem;
}

.btn.loading.btn-sm:before,.btn.loading.btn-xs:before {
  height: .75rem;
  width: .75rem;
}

.btn-group>.btn-active,.btn-group>input[type=radio]:checked.btn {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--p) / var(--tw-border-opacity, 1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc) / var(--tw-text-opacity, 1));
}

.btn-group>.btn-active:focus-visible,.btn-group>input[type=radio]:checked.btn:focus-visible {
  box-shadow: 0 0 0 2px hsl(var(--b1)), 0 0 0 4px hsl(var(--p));
}

.btn-group>.btn:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  margin-left: -1px;
}

.btn-group>.btn:not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

@-webkit-keyframes button-pop {
  0% {
    transform: scale( var(--btn-focus-scale, .95) );
  }

  40% {
    transform: scale(1.02);
  }

  to {
    transform: scale(1);
  }
}

@keyframes button-pop {
  0% {
    transform: scale( var(--btn-focus-scale, .95) );
  }

  40% {
    transform: scale(1.02);
  }

  to {
    transform: scale(1);
  }
}

.card:focus-visible {
  box-shadow: 0 0 0 2px currentColor;
}

.card.bordered {
  --tw-border-opacity: 1;
  border-color: hsla(var(--b2) / var(--tw-border-opacity, 1));
  border-width: 1px;
}

.card.compact .card-body {
  font-size: .875rem;
  line-height: 1.25rem;
  padding: 1rem;
}

.card.compact .card-title {
  margin-bottom: .25rem;
}

.checkbox {
  --chkbg: var(--bc);
  --chkfg: var(--b1);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  --tw-border-opacity: 0.2;
  border-color: hsla(var(--bc) / var(--tw-border-opacity, 1));
  border-width: 1px;
  cursor: pointer;
  height: 1.5rem;
  width: 1.5rem;
  border-radius: var(--rounded-btn, .5rem);
}

.checkbox:focus-visible {
  box-shadow: 0 0 0 2px hsl(var(--b1)), 0 0 0 4px hsl(var(--bc));
}

.checkbox:checked,.checkbox[checked=true] {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--bc) / var(--tw-bg-opacity, 1));
  background-repeat: no-repeat;
  -webkit-animation: checkmark var(--animation-input, .2s)  ease-in-out;
  animation: checkmark var(--animation-input, .2s)  ease-in-out;
  background-image: linear-gradient(-45deg, transparent 65%, hsl(var(--chkbg)) 0), linear-gradient(45deg, transparent 75%, hsl(var(--chkbg)) 0), linear-gradient(-45deg, hsl(var(--chkbg)) 40%, transparent 0), linear-gradient(45deg, hsl(var(--chkbg)) 30%, hsl(var(--chkfg)) 0, hsl(var(--chkfg)) 40%, transparent 0), linear-gradient(-45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 0);
}

.checkbox:disabled {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--bc) / var(--tw-bg-opacity, 1));
  border-color: transparent;
  cursor: not-allowed;
  opacity: .2;
}

@-webkit-keyframes checkmark {
  0% {
    background-position-y: 5px;
  }

  50% {
    background-position-y: -2px;
  }

  to {
    background-position-y: 0;
  }
}

@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }

  50% {
    background-position-y: -2px;
  }

  to {
    background-position-y: 0;
  }
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-primary {
  box-shadow: 0 0 0 2px hsl(var(--b1)), 0 0 0 4px hsl(var(--p));
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-ghost {
  box-shadow: 0 0 0 2px currentColor;
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-link {
  box-shadow: 0 0 0 2px currentColor;
}

.dropdown.dropdown-hover:hover .dropdown-content,.dropdown.dropdown-open .dropdown-content,.dropdown:focus-within .dropdown-content,.dropdown:focus .dropdown-content {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
}

.label-text {
  font-size: .875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}

.label a:hover {
  --tw-text-opacity: 1;
  color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}

.input-bordered {
  --tw-border-opacity: 0.2;
}

.input-ghost {
  --tw-bg-opacity: 0.05;
}

.input-ghost:focus {
  --tw-bg-opacity: 1;
  --tw-text-opacity: 1;
  color: hsla(var(--bc) / var(--tw-text-opacity, 1));
  box-shadow: none;
}

.input-success {
  --tw-border-opacity: 1;
  border-color: hsla(var(--su) / var(--tw-border-opacity, 1));
}

.input-success:focus {
  box-shadow: 0 0 0 2px hsl(var(--b1)), 0 0 0 4px hsl(var(--su));
}

.input-error {
  --tw-border-opacity: 1;
  border-color: hsla(var(--er) / var(--tw-border-opacity, 1));
}

.input-error:focus {
  box-shadow: 0 0 0 2px hsl(var(--b1)), 0 0 0 4px hsl(var(--er));
}

.input-disabled,.input[disabled] {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b2) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--b2) / var(--tw-border-opacity, 1));
  cursor: not-allowed;
  --tw-text-opacity: 0.2;
}

.input-disabled::-moz-placeholder,.input[disabled]::-moz-placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc) / var(--tw-placeholder-opacity, 1));
}

.input-disabled:-ms-input-placeholder,.input[disabled]:-ms-input-placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc) / var(--tw-placeholder-opacity, 1));
}

.input-disabled::-moz-placeholder, .input[disabled]::-moz-placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc) / var(--tw-placeholder-opacity, 1));
}

.input-disabled:-ms-input-placeholder, .input[disabled]:-ms-input-placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc) / var(--tw-placeholder-opacity, 1));
}

.input-disabled::placeholder,.input[disabled]::placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc) / var(--tw-placeholder-opacity, 1));
}

.link:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.link:focus-visible {
  box-shadow: 0 0 0 2px currentColor;
}

.menu.horizontal li.bordered>a,.menu.horizontal li.bordered>span {
  --tw-border-opacity: 1;
  border-color: hsla(var(--p) / var(--tw-border-opacity, 1));
  border-left-width: 0;
  border-bottom-width: 4px;
}

.menu[class*=p-] li a {
  border-radius: var(--rounded-btn, .5rem);
}

.menu li>:where(a),.menu li>:where(span) {
  padding: .75rem 1.25rem;
  color: currentColor;
}

.menu li>:where(a:focus),.menu li>:where(a:hover) {
  --tw-bg-opacity: 0.1;
  background-color: hsla(var(--bc) / var(--tw-bg-opacity, 1));
}

.menu li>:where(a.active) {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p) / var(--tw-bg-opacity, 1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc) / var(--tw-text-opacity, 1));
}

.menu li>:where(a:active) {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--pf) / var(--tw-bg-opacity, 1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc) / var(--tw-text-opacity, 1));
}

.menu li.disabled>a:hover,.menu li.disabled>span:hover {
  background-color: transparent;
}

.menu li.disabled>a,.menu li.disabled>span {
  --tw-text-opacity: 0.2;
  color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}

.menu li.bordered a,.menu li.bordered span {
  --tw-border-opacity: 1;
  border-color: hsla(var(--p) / var(--tw-border-opacity, 1));
  border-left-width: 4px;
}

.menu li.hover-bordered a {
  border-color: transparent;
  border-left-width: 4px;
}

.menu li.hover-bordered a:hover {
  --tw-border-opacity: 1;
  border-color: hsla(var(--p) / var(--tw-border-opacity, 1));
}

.menu ul {
  padding-left: 1.5rem;
}

.menu.compact li>a,.menu.compact li>span {
  font-size: .875rem;
  line-height: 1.25rem;
  padding-top: .5rem;
  padding-bottom: .5rem;
}

.menu .menu-title>a,.menu .menu-title>span {
  font-weight: 700;
  font-size: .75rem;
  line-height: 1rem;
  padding-top: .25rem;
  padding-bottom: .25rem;
  --tw-text-opacity: 0.4;
  color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}

.mockup-phone .display {
  overflow: hidden;
  border-radius: 40px;
  margin-top: -25px;
}

.modal-box {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1));
  padding: 1.5rem;
  width: 100%;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-translate-y: 2.5rem;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
  border-top-left-radius: var(--rounded-box, 1rem);
  border-top-right-radius: var(--rounded-box, 1rem);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, .25);
}

.modal-open .modal-box,.modal-toggle:checked+.modal .modal-box,.modal:target .modal-box {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-translate-y: 0px;
}

.modal-action>:not([hidden])~:not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem*var(--tw-space-x-reverse));
  margin-left: calc(0.5rem*(1 - var(--tw-space-x-reverse)));
}

@-webkit-keyframes radiomark {
  0% {
    box-shadow: 0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset, var(--focus-shadow);
  }

  50% {
    box-shadow: 0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset, var(--focus-shadow);
  }

  to {
    box-shadow: 0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset, var(--focus-shadow);
  }
}

@keyframes radiomark {
  0% {
    box-shadow: 0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset, var(--focus-shadow);
  }

  50% {
    box-shadow: 0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset, var(--focus-shadow);
  }

  to {
    box-shadow: 0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset, var(--focus-shadow);
  }
}

.select-disabled::-moz-placeholder,.select[disabled]::-moz-placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc) / var(--tw-placeholder-opacity, 1));
}

.select-disabled:-ms-input-placeholder,.select[disabled]:-ms-input-placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc) / var(--tw-placeholder-opacity, 1));
}

.select-disabled::-moz-placeholder, .select[disabled]::-moz-placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc) / var(--tw-placeholder-opacity, 1));
}

.select-disabled:-ms-input-placeholder, .select[disabled]:-ms-input-placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc) / var(--tw-placeholder-opacity, 1));
}

.select-disabled::placeholder,.select[disabled]::placeholder {
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc) / var(--tw-placeholder-opacity, 1));
}

.tab:hover {
  --tw-text-opacity: 1;
}

.tab.tab-active {
  border-color: hsla(var(--bc) / var(--tw-border-opacity, 1));
  --tw-border-opacity: 1;
  --tw-text-opacity: 1;
  color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}

.tab:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.tab:focus-visible {
  box-shadow: inset 0 0 0 2px currentColor;
}

.table :where(th,td) {
  padding: 1rem;
  vertical-align: middle;
  white-space: nowrap;
}

.table tr.active:nth-child(2n) td,.table tr.active:nth-child(2n) th,.table tr.active td,.table tr.active th {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b3) / var(--tw-bg-opacity, 1));
}

.table tr.hover:hover td,.table tr.hover:hover th,.table tr.hover:nth-child(2n):hover td,.table tr.hover:nth-child(2n):hover th {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b3) / var(--tw-bg-opacity, 1));
}

.table:where(:not(.table-zebra)) :where(thead,tbody,tfoot) :where(tr:not(:last-child) :where(th,td)) {
  --tw-border-opacity: 1;
  border-color: hsla(var(--b2) / var(--tw-border-opacity, 1));
  border-bottom-width: 1px;
}

.table :where(thead,tfoot) :where(th,td) {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b2) / var(--tw-bg-opacity, 1));
  font-weight: 700;
  font-size: .75rem;
  line-height: 1rem;
  text-transform: uppercase;
}

.table :where(thead,tfoot) :where(th,td):first-child {
  border-top-left-radius: .5rem;
  border-bottom-left-radius: .5rem;
}

.table :where(thead,tfoot) :where(th,td):last-child {
  border-top-right-radius: .5rem;
  border-bottom-right-radius: .5rem;
}

.table :where(tbody th,tbody td) {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1));
}

.toggle {
  --chkbg: hsla(var(--bc) / .2);
  --focus-shadow: 0 0 0;
  --handleoffset: 1.5rem;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  --tw-bg-opacity: 0.2;
  background-color: hsla(var(--bc) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 0.2;
  border-color: hsla(var(--bc) / var(--tw-border-opacity, 1));
  border-width: 1px;
  cursor: pointer;
  height: 1.5rem;
  width: 3rem;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
  transition-duration: .3s;
  border-radius: var(--rounded-badge, 1.9rem);
  transition: background,box-shadow var(--animation-input, .2s) ease-in-out;
  box-shadow: calc(var(--handleoffset)*-1) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset, var(--focus-shadow);
}

.toggle:focus-visible {
  --focus-shadow: 0 0 0 2px hsl(var(--b1)), 0 0 0 4px hsl(var(--bc));
}

.toggle:checked,.toggle[checked=true] {
  --chkbg: hsl(var(--bc));
  --tw-bg-opacity: 1;
  --tw-border-opacity: 1;
  box-shadow: var(--handleoffset) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset, var(--focus-shadow);
}

[dir=rtl] .toggle:checked,[dir=rtl] .toggle[checked=true] {
  box-shadow: calc(var(--handleoffset)*1) 0 0 2px hsl(var(--b1)) inset, 0 0 0 2px hsl(var(--b1)) inset, var(--focus-shadow);
}

.toggle-primary:focus-visible {
  --focus-shadow: 0 0 0 2px hsl(var(--b1)), 0 0 0 4px hsl(var(--p));
}

.toggle-primary:checked,.toggle-primary[checked=true] {
  --chkbg: hsl(var(--p));
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p) / var(--tw-bg-opacity, 1));
  --tw-border-opacity: 0.1;
  border-color: hsla(var(--p) / var(--tw-border-opacity, 1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc) / var(--tw-text-opacity, 1));
}

.toggle:disabled {
  --tw-bg-opacity: 0.2;
  background-color: hsla(var(--bc) / var(--tw-bg-opacity, 1));
  border-color: transparent;
  cursor: not-allowed;
}

.rounded-box {
  border-radius: var(--rounded-box, 1rem);
}

.artboard.phone {
  width: 320px;
}

.btn-sm {
  height: 2rem;
  padding-left: .75rem;
  padding-right: .75rem;
  min-height: 2rem;
  font-size: .875rem;
}

.btn-square:where(.btn-sm) {
  height: 2rem;
  padding: 0;
  width: 2rem;
}

.btn-circle:where(.btn-sm) {
  border-radius: 9999px;
  height: 2rem;
  padding: 0;
  width: 2rem;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.bottom-0 {
  bottom: 0px;
}

.left-0 {
  left: 0px;
}

.top-3 {
  top: 0.75rem;
}

.right-3 {
  right: 0.75rem;
}

.right-0 {
  right: 0px;
}

.mx-10 {
  margin-left: 2.5rem;
  margin-right: 2.5rem;
}

.my-8 {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.my-3 {
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.ml-3 {
  margin-left: 0.75rem;
}

.mr-10 {
  margin-right: 2.5rem;
}

.-ml-3 {
  margin-left: -0.75rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.ml-24 {
  margin-left: 6rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mt-10 {
  margin-top: 2.5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.ml-auto {
  margin-left: auto;
}

.mb-16 {
  margin-bottom: 4rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mb-3 {
  margin-bottom: 0.75rem;
}

.mr-4 {
  margin-right: 1rem;
}

.ml-4 {
  margin-left: 1rem;
}

.mt-\[3px\] {
  margin-top: 3px;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.table {
  display: table;
}

.hidden {
  display: none;
}

.h-screen {
  height: 100vh;
}

.h-full {
  height: 100%;
}

.h-auto {
  height: auto;
}

.max-h-\[500px\] {
  max-height: 500px;
}

.max-h-\[2px\] {
  max-height: 2px;
}

.max-h-\[7px\] {
  max-height: 7px;
}

.min-h-\[2px\] {
  min-height: 2px;
}

.min-h-\[7px\] {
  min-height: 7px;
}

.w-10 {
  width: 2.5rem;
}

.w-36 {
  width: 9rem;
}

.w-5\/6 {
  width: 83.333333%;
}

.w-full {
  width: 100%;
}

.w-8 {
  width: 2rem;
}

.min-w-\[7px\] {
  min-width: 7px;
}

.max-w-\[7px\] {
  max-width: 7px;
}

.max-w-\[70\%\] {
  max-width: 70%;
}

.grow {
  flex-grow: 1;
}

.basis-full {
  flex-basis: 100%;
}

.rotate-90 {
  --tw-rotate: 90deg;
  transform: var(--tw-transform);
}

.rotate-180 {
  --tw-rotate: 180deg;
  transform: var(--tw-transform);
}

.cursor-pointer {
  cursor: pointer;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.content-center {
  align-content: center;
}

.items-center {
  align-items: center;
}

.items-stretch {
  align-items: stretch;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.overflow-auto {
  overflow: auto;
}

.overflow-x-auto {
  overflow-x: auto;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-\[22px\] {
  border-radius: 22px;
}

.border-2 {
  border-width: 2px;
}

.border-0 {
  border-width: 0px;
}

.border {
  border-width: 1px;
}

.border-neutral-content {
  --tw-border-opacity: 1;
  border-color: hsla(var(--nc) / var(--tw-border-opacity));
}

.bg-neutral {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--n) / var(--tw-bg-opacity));
}

.bg-base-100 {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1) / var(--tw-bg-opacity));
}

.bg-base-200 {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b2) / var(--tw-bg-opacity));
}

.bg-gradient-to-t {
  background-image: linear-gradient(to top, var(--tw-gradient-stops));
}

.bg-gradient-to-tr {
  background-image: linear-gradient(to top right, var(--tw-gradient-stops));
}

.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

.from-secondary {
  --tw-gradient-from: hsl(var(--s));
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, hsla(var(--s) / 0));
}

.to-primary {
  --tw-gradient-to: hsl(var(--p));
}

.p-10 {
  padding: 2.5rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.px-0 {
  padding-left: 0px;
  padding-right: 0px;
}

.pl-10 {
  padding-left: 2.5rem;
}

.text-center {
  text-align: center;
}

.text-5xl {
  font-size: 3rem;
  line-height: 1;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.font-light {
  font-weight: 300;
}

.font-medium {
  font-weight: 500;
}

.font-bold {
  font-weight: 700;
}

.uppercase {
  text-transform: uppercase;
}

.italic {
  font-style: italic;
}

.leading-tight {
  line-height: 1.25;
}

.text-neutral-content {
  --tw-text-opacity: 1;
  color: hsla(var(--nc) / var(--tw-text-opacity));
}

.text-neutral {
  --tw-text-opacity: 1;
  color: hsla(var(--n) / var(--tw-text-opacity));
}

.text-base-content {
  --tw-text-opacity: 1;
  color: hsla(var(--bc) / var(--tw-text-opacity));
}

.text-error {
  --tw-text-opacity: 1;
  color: hsla(var(--er) / var(--tw-text-opacity));
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

@media (min-width: 1024px) {
  .md\:flex {
    display: flex;
  }
}

@media (min-width: 1280px) {
  .lg\:flex {
    display: flex;
  }

  .lg\:max-h-max {
    max-height: -webkit-max-content;
    max-height: -moz-max-content;
    max-height: max-content;
  }

  .lg\:basis-1\/3 {
    flex-basis: 33.333333%;
  }

  .lg\:rounded-tl-3xl {
    border-top-left-radius: 1.5rem;
  }
}

@media (min-width: 1920px) {
  .xl\:basis-1\/4 {
    flex-basis: 25%;
  }
}